/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as Chapter2IndexRouteImport } from './routes/chapter-2/index'
import { Route as Chapter1IndexRouteImport } from './routes/chapter-1/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'

const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const Chapter2IndexRoute = Chapter2IndexRouteImport.update({
  id: '/chapter-2/',
  path: '/chapter-2/',
  getParentRoute: () => rootRouteImport,
} as any)
const Chapter1IndexRoute = Chapter1IndexRouteImport.update({
  id: '/chapter-1/',
  path: '/chapter-1/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutIndexRoute
  '/chapter-1': typeof Chapter1IndexRoute
  '/chapter-2': typeof Chapter2IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutIndexRoute
  '/chapter-1': typeof Chapter1IndexRoute
  '/chapter-2': typeof Chapter2IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about/': typeof AboutIndexRoute
  '/chapter-1/': typeof Chapter1IndexRoute
  '/chapter-2/': typeof Chapter2IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/404' | '/about' | '/chapter-1' | '/chapter-2'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/404' | '/about' | '/chapter-1' | '/chapter-2'
  id: '__root__' | '/' | '/404' | '/about/' | '/chapter-1/' | '/chapter-2/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AboutIndexRoute: typeof AboutIndexRoute
  Chapter1IndexRoute: typeof Chapter1IndexRoute
  Chapter2IndexRoute: typeof Chapter2IndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chapter-2/': {
      id: '/chapter-2/'
      path: '/chapter-2'
      fullPath: '/chapter-2'
      preLoaderRoute: typeof Chapter2IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chapter-1/': {
      id: '/chapter-1/'
      path: '/chapter-1'
      fullPath: '/chapter-1'
      preLoaderRoute: typeof Chapter1IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AboutIndexRoute: AboutIndexRoute,
  Chapter1IndexRoute: Chapter1IndexRoute,
  Chapter2IndexRoute: Chapter2IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
